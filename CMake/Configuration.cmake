# - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# COMPILER CONFIGURATION                                  #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - #

IF ( MSVC )
    STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
    SET(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
    STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL}")
    SET(CMAKE_CXX_FLAGS_MINSIZEREL ${CMAKE_CXX_FLAGS_MINSIZEREL})
    STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE  "${CMAKE_C_FLAGS_RELEASE}_INIT")
    SET(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
    STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
    STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}")
    SET(CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
    STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_MINSIZEREL "${CMAKE_C_FLAGS_MINSIZEREL}")
    SET(CMAKE_C_FLAGS_MINSIZEREL ${CMAKE_C_FLAGS_MINSIZEREL})
    STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}")
    SET(CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
    STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO}")
    SET(CMAKE_C_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO})
ENDIF ( MSVC )

SET(default_build_type "Release")
IF (EXISTS "${CMAKE_SOURCE_DIR}/.git")
    SET(default_build_type "Debug")
ENDIF ()

IF (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    MESSAGE(STATUS "Setting build type to '${default_build_type}'")
    SET(CMAKE_BUILD_TYPE "${default_build_type}" CACHE
        STRING "Choose the type of build, options are: None;Debug;Release" FORCE)
    SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "None" "Debug" "Release")
ENDIF ()

IF (CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX OR
    CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra -pthread")
ENDIF ()

MESSAGE(STATUS "C++ Flags:   ${CMAKE_CXX_FLAGS}")
MESSAGE(STATUS "C++ Debug:   ${CMAKE_CXX_FLAGS_DEBUG}")
MESSAGE(STATUS "C++ Release: ${CMAKE_CXX_FLAGS_RELEASE}")



# Set install directory to project root if building on Windows
IF (MSVC)
    SET(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/Install" CACHE
        PATH "Prefix prepended to install directories" FORCE)
ENDIF ()

SET(LIBRARIES_DIR       ${CMAKE_CURRENT_SOURCE_DIR}/Libraries)
SET(SOCKETS_DIR         ${CMAKE_CURRENT_SOURCE_DIR}/Sockets)
SET(SOCKETS_INCLUDE_DIR ${SOCKETS_DIR}/Include)
SET(SOCKETS_SOURCE_DIR  ${SOCKETS_DIR}/Source)
SET(EXAMPLES_DIR        ${CMAKE_CURRENT_SOURCE_DIR}/Examples)
SET(TESTS_DIR           ${CMAKE_CURRENT_SOURCE_DIR}/Tests)

IF (${BUILD_SHARED})
    SET(BUILD_MODE SHARED)
    SET(BUILD_FLAGS -DDLL_EXPORTS)
ELSE ()
    SET(BUILD_MODE STATIC)
    SET(BUILD_FLAGS -DSTATIC)
ENDIF ()
